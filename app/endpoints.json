{
    "endpoints": [
        {
            "name": "GenerateToken",
            "method": "POST",
            "path": [
                "user",
                "generateToken"
            ],
            "parameters": null,
            "description": "Verifies that the username and password exist.",
            "query": {
                "*": [
                    "SELECT basic_auth.user_role($1, $2)"
                ]
            }
        },
        {
            "name": "Teams",
            "method": "GET",
            "path": [
                "api",
                "v1",
                "mlb",
                "teams"
            ],
            "parameters": null,
            "description": "Returns list of MLB teams.",
            "query": {
                "*": [
                    "SELECT id, teamname, teamabbrev FROM baseballreference.team"
                ]
            }
        },
        {
            "name": "Pitching",
            "method": "GET",
            "path": [
                "api",
                "v1",
                "mlb",
                "pitching"
            ],
            "parameters": "teamabbrev",
            "description": "Returns pitching data. Accepts optional teamabbrev parameter.",
            "query": {
                "*": [
                    "SELECT id, teamabbrev, rk, pos, name, age, w, l, wl, era, g, gs, gf, cg, sho, sv, ip, h, r",
				    "er, hr, bb, ibb, so, hbp, bk, wp, bf, eraplus, fip, whip, h9, hr9, bb9, so9, sow, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
					"FROM baseballreference.pitching p INNER JOIN baseballreference.team t ON t.id = p.teamid",
                    ") x WHERE rnk = 1"
                ],
                "limit": [
                    "SELECT id, teamabbrev, rk, pos, name, age, w, l, wl, era, g, gs, gf, cg, sho, sv, ip, h, r",
				    "er, hr, bb, ibb, so, hbp, bk, wp, bf, eraplus, fip, whip, h9, hr9, bb9, so9, sow, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
					"FROM baseballreference.pitching p INNER JOIN baseballreference.team t ON t.id = p.teamid",
                    "WHERE t.teamabbrev = $1) x WHERE rnk = 1"
                ]
            }
        },
        {
            "name": "Batting",
            "method": "GET",
            "path": [
                "api",
                "v1",
                "mlb",
                "batting"
            ],
            "parameters": "teamabbrev",
            "description": "Returns batting data. Accepts optional teamabbrev parameter.",
            "query": {
                "*": [
                    "SELECT id, teamabbrev, rk, pos, name, age, g, pa, ab, r, h, twob, threeb, hr, rbi",
				    "sb, cs, bb, so, ba, obp, slg, ops, opsplus, tb, gdp, hbp, sh, sf, ibb, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
					"FROM baseballreference.batting p INNER JOIN baseballreference.team t ON t.id = p.teamid",
				    ") x WHERE rnk = 1"
                ],
                "limit": [
                    "SELECT id, teamabbrev, rk, pos, name, age, g, pa, ab, r, h, twob, threeb, hr, rbi",
				    "sb, cs, bb, so, ba, obp, slg, ops, opsplus, tb, gdp, hbp, sh, sf, ibb, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
                    "FROM baseballreference.batting p INNER JOIN baseballreference.team t ON t.id = p.teamid",
                    "WHERE t.teamabbrev = $1) x WHERE rnk = 1"
                ]
            }
        },
        {
            "name": "BattingSplits",
            "method": "GET",
            "path": [
                "api",
                "v1",
                "mlb",
                "splits",
                "batting"
            ],
            "parameters": "teamabbrev",
            "description": "Returns batting splits data. Accepts optional teamabbrev parameter.",
            "query": {
                "*": [
                    "SELECT id, teamabbrev, split, g, gs, pa, ab, r, h, twob, threeb, hr, rbi, sb, cs, bb, so, ba",
				    "obp, slg, ops, tb, gdp, hbp, sh, sf, ibb, roe, babip, topsplus, sopsplus, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
					"FROM baseballreference.batting_splits p INNER JOIN baseballreference.team t ON t.id = p.teamid",
				    ") x WHERE rnk = 1"
                ],
                "limit": [
                    "SELECT id, teamabbrev, split, g, gs, pa, ab, r, h, twob, threeb, hr, rbi, sb, cs, bb, so, ba",
				    "obp, slg, ops, tb, gdp, hbp, sh, sf, ibb, roe, babip, topsplus, sopsplus, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
                    "FROM baseballreference.batting_splits p INNER JOIN baseballreference.team t ON t.id = p.teamid",
                    "WHERE t.teamabbrev = $1) x WHERE rnk = 1"
                ]
            }
        },
        {
            "name": "PithchingSplits",
            "method": "GET",
            "path": [
                "api",
                "v1",
                "mlb",
                "splits",
                "pitching"
            ],
            "parameters": "teamabbrev",
            "description": "Returns pitching splits data. Accepts optional teamabbrev parameter.",
            "query": {
                "*": [
                    "SELECT id, teamabbrev, split, g, pa, ab, r, h, twob, threeb, hr, sb, cs, bb, so, sow, ba, obp, slg",
				    "ops, tb, gdp, hbp, sh, sf, ibb, roe, babip, topsplus, sopsplus, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
					"FROM baseballreference.pitching_splits p INNER JOIN baseballreference.team t ON t.id = p.teamid",
				    ") x WHERE rnk = 1"
                ],
                "limit": [
                    "SELECT id, teamabbrev, split, g, pa, ab, r, h, twob, threeb, hr, sb, cs, bb, so, sow, ba, obp, slg",
				    "ops, tb, gdp, hbp, sh, sf, ibb, roe, babip, topsplus, sopsplus, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
                    "FROM baseballreference.pitching_splits p INNER JOIN baseballreference.team t ON t.id = p.teamid",
                    "WHERE t.teamabbrev = $1) x WHERE rnk = 1"
                ]
            }
        },
        {
            "name": "Baserunning",
            "method": "GET",
            "path": [
                "api",
                "v1",
                "mlb",
                "baserunning"
            ],
            "parameters": "teamabbrev",
            "description": "Returns baseruning data. Accepts optional teamabbrev parameter.",
            "query": {
                "*": [
                    "SELECT id, teamabbrev, name, age, pa, roe, xi, rspct, sbo, sb, cs, sbpct, sb2, cs2, sb3, cs3, sbh, csh",
				    "po, pcs, oob, oob1, oob2, oob3, oobhm, bt, xbtpct, firsts, firsts2, firsts3, firstd, firstd3, firstdh, seconds, seconds3, secondsh, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
					"FROM baseballreference.baserunning p INNER JOIN baseballreference.team t ON t.id = p.teamid",
				    ") x WHERE rnk = 1"
                ],
                "limit": [
                    "SELECT id, teamabbrev, name, age, pa, roe, xi, rspct, sbo, sb, cs, sbpct, sb2, cs2, sb3, cs3, sbh, csh",
				    "po, pcs, oob, oob1, oob2, oob3, oobhm, bt, xbtpct, firsts, firsts2, firsts3, firstd, firstd3, firstdh, seconds, seconds3, secondsh, createddate",
		            "FROM (SELECT p.*, t.teamabbrev, DENSE_RANK() OVER(PARTITION BY teamid ORDER BY createddate DESC) AS rnk",
                    "FROM baseballreference.baserunning p INNER JOIN baseballreference.team t ON t.id = p.teamid",
                    "WHERE t.teamabbrev = $1) x WHERE rnk = 1"
                ]
            }
        }
    ]
}